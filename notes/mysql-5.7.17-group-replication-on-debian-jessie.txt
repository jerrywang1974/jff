MySQL 5.7.17 group replication on Debian Jessie

http://lefred.be/content/group-replication-vs-galera/
http://mysqlhighavailability.com/performance-evaluation-mysql-5-7-group-replication/
http://www.gpfeng.com/?p=603
http://feed.askmaclean.com/archives/group-replication-is-ga-with-mysql-5-7-17-comparison-with-galera.html

https://www.percona.com/blog/2017/02/24/battle-for-synchronous-replication-in-mysql-galera-vs-group-replication/


基于binlog复制和Paxos 一致性协议，确保事务的全序，通过主键判断事务间是否冲突。
* 组通讯传播 binlog, 各节点提取 writeset(修改的行的主键的hash值) 判断冲突；
* 两两全连接；
* 事务在各个节点间认证是否可提交是同步的，一旦认证，则应用事务是异步的；

Galera 和 GR 非常像，比较大的区别：

* Oracle 官方宣称 GR 性能高一倍 (http://mysqlhighavailability.com/performance-evaluation-mysql-5-7-group-replication/ ，作者是 Oracle 的性能工程师);
* 用的一致性协议算法不一样(http://lefred.be/content/group-replication-vs-galera/)，GR 用的是 Paxos 变种 (http://sysnet.ucsd.edu/~yamao/pub/mencius-osdi.pdf),
  Galera 用的 Virtual Synchrony (http://dsn.jhu.edu/~yairamir/Yair_phd.pdf)， 大致意思是 GR 节点间两两通讯，而 VS 是令牌环，同一时刻只能一个节点发消息，所以 GR 的通讯效率更好;
* Galera 支持不存储数据的 Arbitrator 节点，GR 不支持;
* Galera 有一个 State Snapshot Transfer，在新节点或者落后太多节点加入时，可以自动传输快照（类似 redis 复制，如果 aof 断档跟不上则 dump rdb 给 slave），
  GR 没这个功能，需要手动 mysqldump 导出导入，因为 binlog 可能被 purge，而且 binlog 重放会很慢，每个中间操作都需要重放。  但也有说法是 Galera 的 SST
  要尽量避免（估计是突然大数据量传输，对网络，对 MySQL 锁机制影响很大);
* Galera 在大事务下会导致集群基本挂起，这点 GR 的文档也提议要避免大事务，不知道并发性能比 Galera 是否要好点;

```
for i in 1 2 3; do
    docker run -dt --name mysql$i debian /bin/bash
done

apt update && apt install -y lsb-release wget whiptail
dpkg -i mysql-apt-config_0.8.0-1_all.deb
apt update && apt install -y mysql-server
```

需要注意的点：

* 不同节点的 hostname 要能互相解析，否则节点在加入 group 时无法联通（可以在 /etc/hosts 设置);
* 需要把 /etc/mysql/mysql.conf.d/mysqld.cnf 的 bind-address	= 127.0.0.1 注释掉，否则 rpl 账户不能连接其它节点;
* http://dev.mysql.com/doc/refman/5.7/en/group-replication-ip-address-whitelisting.html
  默认的 automatic, IP 白名单只有 127/8 子网，后续节点无法连接其它节点;
  STOP GROUP_REPLICATION;
  SET GLOBAL group_replication_ip_whitelist="10.0.0.0/8,172.17.0.0/16,127.0.0.0/8";
  START GROUP_REPLICATION;
* 最多 9 个 MySQL 节点;
* 所有表都要有主键，只支持 InnoDB，必需使用 RBR 复制模式。
* 避免大事务（在 certification 阶段可能冲突)，避免热点行在不同节点修改（频繁冲突而回滚事务)

http://dev.mysql.com/doc/refman/5.7/en/group-replication-find-primary.html
single-master 模式下找 master：
SELECT VARIABLE_VALUE FROM performance_schema.global_status WHERE VARIABLE_NAME= 'group_replication_primary_member';

http://dev.mysql.com/doc/refman/5.7/en/group-replication-data-definition-statements.html
multi-master 下 DDL 不安全。

http://dev.mysql.com/doc/refman/5.7/en/group-replication-usage-advice-and-limitations-of-distributed-recovery.html
恢复时最好做一个快照恢复，否则可能 binlog 重放会花很长时间。

